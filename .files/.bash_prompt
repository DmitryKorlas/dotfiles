
if [[ "$(uname | grep -i darwin 2> /dev/null)" ]] ; then
    # osx specific

    # using gnu utils instead of default bsd
    export PATH="$(brew --prefix coreutils)"/libexec/gnubin:$PATH

    if [ -f $(brew --prefix)/etc/bash_completion ]; then
        . $(brew --prefix)/etc/bash_completion
    fi
fi


function parse_git_dirty() {
    if ! [[ "$(git status 2> /dev/null | tail -n1 | grep 'nothing to commit')" ]] ; then
        echo "*"
    fi
}

function parse_git_branch() {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

bash_prompt() {
    # colors reset
    local RESET='\e[0m'       # Text Reset

    # normal
    local BLACK='\e[0;30m'        # BLACK
    local RED='\e[0;31m'          # RED
    local GREEN='\e[0;32m'        # GREEN
    local YELLOW='\e[0;33m'       # YELLOW
    local BLUE='\e[0;34m'         # BLUE
    local PURPLE='\e[0;35m'       # PURPLE
    local CYAN='\e[0;36m'         # CYAN
    local WHITE='\e[0;37m'        # WHITE

    # bold
    local BBLACK='\e[1;30m'       # BLACK
    local BRED='\e[1;31m'         # RED
    local BGREEN='\e[1;32m'       # GREEN
    local BYELLOW='\e[1;33m'      # YELLOW
    local BBLUE='\e[1;34m'        # BLUE
    local BPURPLE='\e[1;35m'      # PURPLE
    local BCYAN='\e[1;36m'        # CYAN
    local BWHITE='\e[1;37m'       # WHITE

    # underline
    local UBLACK='\e[4;30m'       # BLACK
    local URED='\e[4;31m'         # RED
    local UGREEN='\e[4;32m'       # GREEN
    local UYELLOW='\e[4;33m'      # YELLOW
    local UBLUE='\e[4;34m'        # BLUE
    local UPURPLE='\e[4;35m'      # PURPLE
    local UCYAN='\e[4;36m'        # CYAN
    local UWHITE='\e[4;37m'       # WHITE

    # background
    local BG_BLACK='\e[40m'       # BLACK
    local BG_RED='\e[41m'         # RED
    local BG_GREEN='\e[42m'       # GREEN
    local BG_YELLOW='\e[43m'      # YELLOW
    local BG_BLUE='\e[44m'        # BLUE
    local BG_PURPLE='\e[45m'      # PURPLE
    local BG_CYAN='\e[46m'        # CYAN
    local BG_WHITE='\e[47m'       # WHITE

    # high intensive
    local IBLACK='\e[0;90m'       # BLACK
    local IRED='\e[0;91m'         # RED
    local IGREEN='\e[0;92m'       # GREEN
    local IYELLOW='\e[0;93m'      # YELLOW
    local IBLUE='\e[0;94m'        # BLUE
    local IPURPLE='\e[0;95m'      # PURPLE
    local ICYAN='\e[0;96m'        # CYAN
    local IWHITE='\e[0;97m'       # WHITE

    # bold high intensive
    local BIBLACK='\e[1;90m'      # BLACK
    local BIRED='\e[1;91m'        # RED
    local BIGREEN='\e[1;92m'      # GREEN
    local BIYELLOW='\e[1;93m'     # YELLOW
    local BIBLUE='\e[1;94m'       # BLUE
    local BIPURPLE='\e[1;95m'     # PURPLE
    local BICYAN='\e[1;96m'       # CYAN
    local BIWHITE='\e[1;97m'      # WHITE

    # background high intensive
    local BG_IBLACK='\e[0;100m'   # BLACK
    local BG_IRED='\e[0;101m'     # RED
    local BG_IGREEN='\e[0;102m'   # GREEN
    local BG_IYELLOW='\e[0;103m'  # YELLOW
    local BG_IBLUE='\e[0;104m'    # BLUE
    local BG_IPURPLE='\e[0;105m'  # PURPLE
    local BG_ICYAN='\e[0;106m'    # CYAN
    local BG_IWHITE='\e[0;107m'   # WHITE

    # set a fancy prompt (non-color, unless we know we "want" color)
    case "$TERM" in
        xterm-color) color_prompt=yes;;
    esac

    # uncomment for a colored prompt, if the terminal has the capability; turned
    # off by default to not distract the user: the focus in a terminal window
    # should be on the output of commands, not on the prompt
    force_color_prompt=yes

    if [ -n "$force_color_prompt" ]; then
        if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
        # We have color support; assume it's compliant with Ecma-48
        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
        # a case would tend to support setf rather than setaf.)
            color_prompt=yes
        else
            color_prompt=
        fi
    fi

    local GIT_SUFFIX="\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$PURPLE\]\$(parse_git_branch)"
    if [ "$color_prompt" = yes ]; then
        PS1="${debian_chroot:+($debian_chroot)}"
        PS1+="\[$GREEN\]\u"
        PS1+="\[$WHITE\]@"
        PS1+="\[$BIPURPLE\]\h"
        PS1+="\[$WHITE\]:"
        PS1+="\[$BLUE\]\w"
        PS1+="\[$RESET\]"
        PS1+="${GIT_SUFFIX}"
        PS1+="\[$RESET\]\n\$ "
    else
        PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\n\$ '
    fi
    unset color_prompt force_color_prompt

    # If this is an xterm set the title to user@host:dir
    case "$TERM" in
    xterm*|rxvt*)
        PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
        ;;
    *)
        ;;
    esac

}

# setup terminal prompt
bash_prompt
unset bash_prompt
